# provided by DGCP container team
# https://dgcp-ope.backlog.com/projects/DGCP_APP_CONTAINER_RECEPT
AWSTemplateFormatVersion: '2010-09-09'
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Parameters:
          - StartServiceTime
          - StopServiceTime
          - TimeZone
          - DesiredCount
          - ECSClusterName
          - ECSServiceName

Parameters:
  StartServiceTime:
    Type: String
    Description: 'The time to start the ecs service (cron)'
    Default: cron(0 9 * * ? *)
  StopServiceTime:
    Type: String
    Description: 'The time to stop the ecs service (cron)'
    Default: cron(0 18 * * ? *)
  TimeZone:
    Type: String
    Default: Asia/Tokyo
  DesiredCount:
    Type: String
    Description: 'The Number of the ecs service tasks at startup'
    Default: '2'
  ECSClusterName:
    Type: String
    Description: 'The name of the ECS Cluster'
  ECSServiceName:
    Type: String
    Description: 'The name of the ECS Service'

Resources:
  EventBridgeSchedulerRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: 'Allow'
            Principal:
              Service: 'scheduler.amazonaws.com'
            Action: 'sts:AssumeRole'
      Policies:
        - PolicyName: 'EventBridgeSchedulerPolicy'
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: 'Allow'
                Action:
                  - 'ecs:UpdateService'
                Resource: !Sub 'arn:aws:ecs:${AWS::Region}:${AWS::AccountId}:service/${ECSClusterName}/${ECSServiceName}'
  
  StartStopECSServiceScheduleGroup:
    Type: AWS::Scheduler::ScheduleGroup
    Properties:
      Name: !Sub ScheGrp-StartStop-${ECSServiceName}
  
  StartECSServiceSchedule:
    Type: 'AWS::Scheduler::Schedule'
    Properties:
      FlexibleTimeWindow:
        Mode: 'OFF'
      GroupName: !Ref StartStopECSServiceScheduleGroup
      Name: !Sub Sche-Start-${ECSServiceName}
      ScheduleExpression: !Ref StartServiceTime
      ScheduleExpressionTimezone: !Ref TimeZone
      Target:
        Arn: 'arn:aws:scheduler:::aws-sdk:ecs:updateService'
        RoleArn: !GetAtt EventBridgeSchedulerRole.Arn
        Input: !Sub '{"Cluster": "${ECSClusterName}", "Service": "${ECSServiceName}", "DesiredCount": ${DesiredCount}}'
        RetryPolicy:
          MaximumRetryAttempts: 3
          MaximumEventAgeInSeconds: 60
  
  StopECSServiceSchedule:
    Type: 'AWS::Scheduler::Schedule'
    Properties:
      FlexibleTimeWindow:
        Mode: 'OFF'
      GroupName: !Ref StartStopECSServiceScheduleGroup
      Name: !Sub Sche-Stop-${ECSServiceName}
      ScheduleExpression: !Ref StopServiceTime
      ScheduleExpressionTimezone: !Ref TimeZone
      Target:
        Arn: 'arn:aws:scheduler:::aws-sdk:ecs:updateService'
        RoleArn: !GetAtt EventBridgeSchedulerRole.Arn
        Input: !Sub '{"Cluster": "${ECSClusterName}", "Service": "${ECSServiceName}", "DesiredCount": 0}'
        RetryPolicy:
          MaximumRetryAttempts: 3
          MaximumEventAgeInSeconds: 60
  